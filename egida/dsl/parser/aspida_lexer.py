# Generated from aspida.g4 by ANTLR 4.8
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2-")
        buf.write("\u01ac\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\3\2\3\2\3\3\3")
        buf.write("\3\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\7")
        buf.write("\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3")
        buf.write("\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t")
        buf.write("\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3")
        buf.write("\n\3\n\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16")
        buf.write("\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17")
        buf.write("\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20")
        buf.write("\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22")
        buf.write("\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23")
        buf.write("\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24")
        buf.write("\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25")
        buf.write("\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\27\3\27")
        buf.write("\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\31\3\31")
        buf.write("\3\31\3\32\3\32\7\32\u0107\n\32\f\32\16\32\u010a\13\32")
        buf.write("\3\32\3\32\3\33\3\33\3\33\3\33\3\34\5\34\u0113\n\34\3")
        buf.write("\34\3\34\6\34\u0117\n\34\r\34\16\34\u0118\3\34\3\34\3")
        buf.write("\35\3\35\3\35\5\35\u0120\n\35\3\36\3\36\3\36\3\36\3\36")
        buf.write("\3\36\3\37\3\37\3 \3 \3!\3!\3!\7!\u012f\n!\f!\16!\u0132")
        buf.write("\13!\5!\u0134\n!\3\"\3\"\5\"\u0138\n\"\3\"\3\"\3#\3#\3")
        buf.write("#\7#\u013f\n#\f#\16#\u0142\13#\3#\3#\3$\5$\u0147\n$\3")
        buf.write("$\3$\3$\6$\u014c\n$\r$\16$\u014d\5$\u0150\n$\3$\5$\u0153")
        buf.write("\n$\3%\3%\3&\3&\3\'\3\'\3\'\3\'\3(\3(\3(\3(\5(\u0161\n")
        buf.write("(\3)\3)\3)\3)\3)\3)\3)\3)\3*\3*\5*\u016d\n*\3*\3*\3*\5")
        buf.write("*\u0172\n*\3*\3*\3*\5*\u0177\n*\3*\3*\3*\5*\u017c\n*\3")
        buf.write("+\3+\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3")
        buf.write(".\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60\3\61\3")
        buf.write("\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62")
        buf.write("\3\62\3\62\3\62\3\62\3\62\2\2\63\3\3\5\4\7\5\t\6\13\7")
        buf.write("\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21")
        buf.write("!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67")
        buf.write("\359\2;\2=\2?\2A\2C\2E\36G\37I K!M\"O#Q$S%U&W\'Y([)]*")
        buf.write("_+a,c-\3\2\f\4\2\f\f\17\17\4\2\13\13\"\"\n\2$$\61\61^")
        buf.write("^ddhhppttvv\5\2\62;CHch\5\2\2!$$^^\3\2\63;\3\2\62;\4\2")
        buf.write("GGgg\4\2--//\4\2CHch\2\u01b8\2\3\3\2\2\2\2\5\3\2\2\2\2")
        buf.write("\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3")
        buf.write("\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2")
        buf.write("\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2")
        buf.write("\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2")
        buf.write("\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63")
        buf.write("\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\2E\3\2\2\2\2G\3\2\2")
        buf.write("\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2")
        buf.write("\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3")
        buf.write("\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\3e")
        buf.write("\3\2\2\2\5g\3\2\2\2\7i\3\2\2\2\tk\3\2\2\2\13p\3\2\2\2")
        buf.write("\ru\3\2\2\2\17\u0080\3\2\2\2\21\u008b\3\2\2\2\23\u0097")
        buf.write("\3\2\2\2\25\u00a3\3\2\2\2\27\u00a5\3\2\2\2\31\u00a7\3")
        buf.write("\2\2\2\33\u00a9\3\2\2\2\35\u00b2\3\2\2\2\37\u00bb\3\2")
        buf.write("\2\2!\u00c2\3\2\2\2#\u00c9\3\2\2\2%\u00d2\3\2\2\2\'\u00db")
        buf.write("\3\2\2\2)\u00e6\3\2\2\2+\u00f1\3\2\2\2-\u00f6\3\2\2\2")
        buf.write("/\u00fc\3\2\2\2\61\u0101\3\2\2\2\63\u0104\3\2\2\2\65\u010d")
        buf.write("\3\2\2\2\67\u0116\3\2\2\29\u011c\3\2\2\2;\u0121\3\2\2")
        buf.write("\2=\u0127\3\2\2\2?\u0129\3\2\2\2A\u0133\3\2\2\2C\u0135")
        buf.write("\3\2\2\2E\u013b\3\2\2\2G\u0146\3\2\2\2I\u0154\3\2\2\2")
        buf.write("K\u0156\3\2\2\2M\u0158\3\2\2\2O\u0160\3\2\2\2Q\u0162\3")
        buf.write("\2\2\2S\u016c\3\2\2\2U\u017d\3\2\2\2W\u017f\3\2\2\2Y\u0184")
        buf.write("\3\2\2\2[\u018a\3\2\2\2]\u0190\3\2\2\2_\u0195\3\2\2\2")
        buf.write("a\u019b\3\2\2\2c\u019f\3\2\2\2ef\7<\2\2f\4\3\2\2\2gh\7")
        buf.write("}\2\2h\6\3\2\2\2ij\7\177\2\2j\b\3\2\2\2kl\7p\2\2lm\7c")
        buf.write("\2\2mn\7o\2\2no\7g\2\2o\n\3\2\2\2pq\7P\2\2qr\7C\2\2rs")
        buf.write("\7O\2\2st\7G\2\2t\f\3\2\2\2uv\7e\2\2vw\7q\2\2wx\7p\2\2")
        buf.write("xy\7p\2\2yz\7g\2\2z{\7e\2\2{|\7v\2\2|}\7k\2\2}~\7q\2\2")
        buf.write("~\177\7p\2\2\177\16\3\2\2\2\u0080\u0081\7E\2\2\u0081\u0082")
        buf.write("\7Q\2\2\u0082\u0083\7P\2\2\u0083\u0084\7P\2\2\u0084\u0085")
        buf.write("\7G\2\2\u0085\u0086\7E\2\2\u0086\u0087\7V\2\2\u0087\u0088")
        buf.write("\7K\2\2\u0088\u0089\7Q\2\2\u0089\u008a\7P\2\2\u008a\20")
        buf.write("\3\2\2\2\u008b\u008c\7f\2\2\u008c\u008d\7g\2\2\u008d\u008e")
        buf.write("\7u\2\2\u008e\u008f\7e\2\2\u008f\u0090\7t\2\2\u0090\u0091")
        buf.write("\7k\2\2\u0091\u0092\7r\2\2\u0092\u0093\7v\2\2\u0093\u0094")
        buf.write("\7k\2\2\u0094\u0095\7q\2\2\u0095\u0096\7p\2\2\u0096\22")
        buf.write("\3\2\2\2\u0097\u0098\7F\2\2\u0098\u0099\7G\2\2\u0099\u009a")
        buf.write("\7U\2\2\u009a\u009b\7E\2\2\u009b\u009c\7T\2\2\u009c\u009d")
        buf.write("\7K\2\2\u009d\u009e\7R\2\2\u009e\u009f\7V\2\2\u009f\u00a0")
        buf.write("\7K\2\2\u00a0\u00a1\7Q\2\2\u00a1\u00a2\7P\2\2\u00a2\24")
        buf.write("\3\2\2\2\u00a3\u00a4\7]\2\2\u00a4\26\3\2\2\2\u00a5\u00a6")
        buf.write("\7.\2\2\u00a6\30\3\2\2\2\u00a7\u00a8\7_\2\2\u00a8\32\3")
        buf.write("\2\2\2\u00a9\u00aa\7u\2\2\u00aa\u00ab\7g\2\2\u00ab\u00ac")
        buf.write("\7e\2\2\u00ac\u00ad\7v\2\2\u00ad\u00ae\7k\2\2\u00ae\u00af")
        buf.write("\7q\2\2\u00af\u00b0\7p\2\2\u00b0\u00b1\7u\2\2\u00b1\34")
        buf.write("\3\2\2\2\u00b2\u00b3\7U\2\2\u00b3\u00b4\7G\2\2\u00b4\u00b5")
        buf.write("\7E\2\2\u00b5\u00b6\7V\2\2\u00b6\u00b7\7K\2\2\u00b7\u00b8")
        buf.write("\7Q\2\2\u00b8\u00b9\7P\2\2\u00b9\u00ba\7U\2\2\u00ba\36")
        buf.write("\3\2\2\2\u00bb\u00bc\7r\2\2\u00bc\u00bd\7q\2\2\u00bd\u00be")
        buf.write("\7k\2\2\u00be\u00bf\7p\2\2\u00bf\u00c0\7v\2\2\u00c0\u00c1")
        buf.write("\7u\2\2\u00c1 \3\2\2\2\u00c2\u00c3\7R\2\2\u00c3\u00c4")
        buf.write("\7Q\2\2\u00c4\u00c5\7K\2\2\u00c5\u00c6\7P\2\2\u00c6\u00c7")
        buf.write("\7V\2\2\u00c7\u00c8\7U\2\2\u00c8\"\3\2\2\2\u00c9\u00ca")
        buf.write("\7e\2\2\u00ca\u00cb\7q\2\2\u00cb\u00cc\7p\2\2\u00cc\u00cd")
        buf.write("\7v\2\2\u00cd\u00ce\7t\2\2\u00ce\u00cf\7q\2\2\u00cf\u00d0")
        buf.write("\7n\2\2\u00d0\u00d1\7u\2\2\u00d1$\3\2\2\2\u00d2\u00d3")
        buf.write("\7E\2\2\u00d3\u00d4\7Q\2\2\u00d4\u00d5\7P\2\2\u00d5\u00d6")
        buf.write("\7V\2\2\u00d6\u00d7\7T\2\2\u00d7\u00d8\7Q\2\2\u00d8\u00d9")
        buf.write("\7N\2\2\u00d9\u00da\7U\2\2\u00da&\3\2\2\2\u00db\u00dc")
        buf.write("\7g\2\2\u00dc\u00dd\7z\2\2\u00dd\u00de\7e\2\2\u00de\u00df")
        buf.write("\7n\2\2\u00df\u00e0\7w\2\2\u00e0\u00e1\7u\2\2\u00e1\u00e2")
        buf.write("\7k\2\2\u00e2\u00e3\7q\2\2\u00e3\u00e4\7p\2\2\u00e4\u00e5")
        buf.write("\7u\2\2\u00e5(\3\2\2\2\u00e6\u00e7\7G\2\2\u00e7\u00e8")
        buf.write("\7Z\2\2\u00e8\u00e9\7E\2\2\u00e9\u00ea\7N\2\2\u00ea\u00eb")
        buf.write("\7W\2\2\u00eb\u00ec\7U\2\2\u00ec\u00ed\7K\2\2\u00ed\u00ee")
        buf.write("\7Q\2\2\u00ee\u00ef\7P\2\2\u00ef\u00f0\7U\2\2\u00f0*\3")
        buf.write("\2\2\2\u00f1\u00f2\7v\2\2\u00f2\u00f3\7t\2\2\u00f3\u00f4")
        buf.write("\7w\2\2\u00f4\u00f5\7g\2\2\u00f5,\3\2\2\2\u00f6\u00f7")
        buf.write("\7h\2\2\u00f7\u00f8\7c\2\2\u00f8\u00f9\7n\2\2\u00f9\u00fa")
        buf.write("\7u\2\2\u00fa\u00fb\7g\2\2\u00fb.\3\2\2\2\u00fc\u00fd")
        buf.write("\7p\2\2\u00fd\u00fe\7w\2\2\u00fe\u00ff\7n\2\2\u00ff\u0100")
        buf.write("\7n\2\2\u0100\60\3\2\2\2\u0101\u0102\7<\2\2\u0102\u0103")
        buf.write("\7<\2\2\u0103\62\3\2\2\2\u0104\u0108\7%\2\2\u0105\u0107")
        buf.write("\n\2\2\2\u0106\u0105\3\2\2\2\u0107\u010a\3\2\2\2\u0108")
        buf.write("\u0106\3\2\2\2\u0108\u0109\3\2\2\2\u0109\u010b\3\2\2\2")
        buf.write("\u010a\u0108\3\2\2\2\u010b\u010c\b\32\2\2\u010c\64\3\2")
        buf.write("\2\2\u010d\u010e\t\3\2\2\u010e\u010f\3\2\2\2\u010f\u0110")
        buf.write("\b\33\2\2\u0110\66\3\2\2\2\u0111\u0113\7\17\2\2\u0112")
        buf.write("\u0111\3\2\2\2\u0112\u0113\3\2\2\2\u0113\u0114\3\2\2\2")
        buf.write("\u0114\u0117\7\f\2\2\u0115\u0117\7\17\2\2\u0116\u0112")
        buf.write("\3\2\2\2\u0116\u0115\3\2\2\2\u0117\u0118\3\2\2\2\u0118")
        buf.write("\u0116\3\2\2\2\u0118\u0119\3\2\2\2\u0119\u011a\3\2\2\2")
        buf.write("\u011a\u011b\b\34\2\2\u011b8\3\2\2\2\u011c\u011f\7^\2")
        buf.write("\2\u011d\u0120\t\4\2\2\u011e\u0120\5;\36\2\u011f\u011d")
        buf.write("\3\2\2\2\u011f\u011e\3\2\2\2\u0120:\3\2\2\2\u0121\u0122")
        buf.write("\7w\2\2\u0122\u0123\5=\37\2\u0123\u0124\5=\37\2\u0124")
        buf.write("\u0125\5=\37\2\u0125\u0126\5=\37\2\u0126<\3\2\2\2\u0127")
        buf.write("\u0128\t\5\2\2\u0128>\3\2\2\2\u0129\u012a\n\6\2\2\u012a")
        buf.write("@\3\2\2\2\u012b\u0134\7\62\2\2\u012c\u0130\t\7\2\2\u012d")
        buf.write("\u012f\t\b\2\2\u012e\u012d\3\2\2\2\u012f\u0132\3\2\2\2")
        buf.write("\u0130\u012e\3\2\2\2\u0130\u0131\3\2\2\2\u0131\u0134\3")
        buf.write("\2\2\2\u0132\u0130\3\2\2\2\u0133\u012b\3\2\2\2\u0133\u012c")
        buf.write("\3\2\2\2\u0134B\3\2\2\2\u0135\u0137\t\t\2\2\u0136\u0138")
        buf.write("\t\n\2\2\u0137\u0136\3\2\2\2\u0137\u0138\3\2\2\2\u0138")
        buf.write("\u0139\3\2\2\2\u0139\u013a\5A!\2\u013aD\3\2\2\2\u013b")
        buf.write("\u0140\7$\2\2\u013c\u013f\59\35\2\u013d\u013f\5? \2\u013e")
        buf.write("\u013c\3\2\2\2\u013e\u013d\3\2\2\2\u013f\u0142\3\2\2\2")
        buf.write("\u0140\u013e\3\2\2\2\u0140\u0141\3\2\2\2\u0141\u0143\3")
        buf.write("\2\2\2\u0142\u0140\3\2\2\2\u0143\u0144\7$\2\2\u0144F\3")
        buf.write("\2\2\2\u0145\u0147\7/\2\2\u0146\u0145\3\2\2\2\u0146\u0147")
        buf.write("\3\2\2\2\u0147\u0148\3\2\2\2\u0148\u014f\5A!\2\u0149\u014b")
        buf.write("\7\60\2\2\u014a\u014c\t\b\2\2\u014b\u014a\3\2\2\2\u014c")
        buf.write("\u014d\3\2\2\2\u014d\u014b\3\2\2\2\u014d\u014e\3\2\2\2")
        buf.write("\u014e\u0150\3\2\2\2\u014f\u0149\3\2\2\2\u014f\u0150\3")
        buf.write("\2\2\2\u0150\u0152\3\2\2\2\u0151\u0153\5C\"\2\u0152\u0151")
        buf.write("\3\2\2\2\u0152\u0153\3\2\2\2\u0153H\3\2\2\2\u0154\u0155")
        buf.write("\t\b\2\2\u0155J\3\2\2\2\u0156\u0157\t\13\2\2\u0157L\3")
        buf.write("\2\2\2\u0158\u0159\5G$\2\u0159\u015a\7/\2\2\u015a\u015b")
        buf.write("\5G$\2\u015bN\3\2\2\2\u015c\u015d\7/\2\2\u015d\u0161\7")
        buf.write("@\2\2\u015e\u015f\7?\2\2\u015f\u0161\7@\2\2\u0160\u015c")
        buf.write("\3\2\2\2\u0160\u015e\3\2\2\2\u0161P\3\2\2\2\u0162\u0163")
        buf.write("\5G$\2\u0163\u0164\7\60\2\2\u0164\u0165\5G$\2\u0165\u0166")
        buf.write("\7\60\2\2\u0166\u0167\5G$\2\u0167\u0168\7\60\2\2\u0168")
        buf.write("\u0169\5G$\2\u0169R\3\2\2\2\u016a\u016d\5G$\2\u016b\u016d")
        buf.write("\5M\'\2\u016c\u016a\3\2\2\2\u016c\u016b\3\2\2\2\u016d")
        buf.write("\u016e\3\2\2\2\u016e\u0171\7\60\2\2\u016f\u0172\5G$\2")
        buf.write("\u0170\u0172\5M\'\2\u0171\u016f\3\2\2\2\u0171\u0170\3")
        buf.write("\2\2\2\u0172\u0173\3\2\2\2\u0173\u0176\7\60\2\2\u0174")
        buf.write("\u0177\5G$\2\u0175\u0177\5M\'\2\u0176\u0174\3\2\2\2\u0176")
        buf.write("\u0175\3\2\2\2\u0177\u0178\3\2\2\2\u0178\u017b\7\60\2")
        buf.write("\2\u0179\u017c\5G$\2\u017a\u017c\5M\'\2\u017b\u0179\3")
        buf.write("\2\2\2\u017b\u017a\3\2\2\2\u017cT\3\2\2\2\u017d\u017e")
        buf.write("\7=\2\2\u017eV\3\2\2\2\u017f\u0180\7O\2\2\u0180\u0181")
        buf.write("\7C\2\2\u0181\u0182\7K\2\2\u0182\u0183\7P\2\2\u0183X\3")
        buf.write("\2\2\2\u0184\u0185\7J\2\2\u0185\u0186\7Q\2\2\u0186\u0187")
        buf.write("\7U\2\2\u0187\u0188\7V\2\2\u0188\u0189\7U\2\2\u0189Z\3")
        buf.write("\2\2\2\u018a\u018b\7V\2\2\u018b\u018c\7C\2\2\u018c\u018d")
        buf.write("\7U\2\2\u018d\u018e\7M\2\2\u018e\u018f\7U\2\2\u018f\\")
        buf.write("\3\2\2\2\u0190\u0191\7X\2\2\u0191\u0192\7C\2\2\u0192\u0193")
        buf.write("\7T\2\2\u0193\u0194\7U\2\2\u0194^\3\2\2\2\u0195\u0196")
        buf.write("\7N\2\2\u0196\u0197\7Q\2\2\u0197\u0198\7E\2\2\u0198\u0199")
        buf.write("\7C\2\2\u0199\u019a\7N\2\2\u019a`\3\2\2\2\u019b\u019c")
        buf.write("\7U\2\2\u019c\u019d\7U\2\2\u019d\u019e\7J\2\2\u019eb\3")
        buf.write("\2\2\2\u019f\u01a0\7U\2\2\u01a0\u01a1\7U\2\2\u01a1\u01a2")
        buf.write("\7J\2\2\u01a2\u01a3\7/\2\2\u01a3\u01a4\7R\2\2\u01a4\u01a5")
        buf.write("\7C\2\2\u01a5\u01a6\7U\2\2\u01a6\u01a7\7U\2\2\u01a7\u01a8")
        buf.write("\7Y\2\2\u01a8\u01a9\7Q\2\2\u01a9\u01aa\7T\2\2\u01aa\u01ab")
        buf.write("\7F\2\2\u01abd\3\2\2\2\26\2\u0108\u0112\u0116\u0118\u011f")
        buf.write("\u0130\u0133\u0137\u013e\u0140\u0146\u014d\u014f\u0152")
        buf.write("\u0160\u016c\u0171\u0176\u017b\3\b\2\2")
        return buf.getvalue()


class AspidaLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    COMMENT = 25
    WHITESPACE = 26
    NEWLINE = 27
    STRING = 28
    NUMBER = 29
    DIGIT = 30
    HEX_CHAR = 31
    NUMBER_RANGE = 32
    ARROW = 33
    SINGLE_IP = 34
    IP_RANGE = 35
    NS = 36
    MAIN_KW = 37
    HOSTS_KW = 38
    TASKS_KW = 39
    VARS_KW = 40
    LOCAL_KW = 41
    SSH_KW = 42
    SSHPASS_KW = 43

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "':'", "'{'", "'}'", "'name'", "'NAME'", "'connection'", "'CONNECTION'", 
            "'description'", "'DESCRIPTION'", "'['", "','", "']'", "'sections'", 
            "'SECTIONS'", "'points'", "'POINTS'", "'controls'", "'CONTROLS'", 
            "'exclusions'", "'EXCLUSIONS'", "'true'", "'false'", "'null'", 
            "'::'", "';'", "'MAIN'", "'HOSTS'", "'TASKS'", "'VARS'", "'LOCAL'", 
            "'SSH'", "'SSH-PASSWORD'" ]

    symbolicNames = [ "<INVALID>",
            "COMMENT", "WHITESPACE", "NEWLINE", "STRING", "NUMBER", "DIGIT", 
            "HEX_CHAR", "NUMBER_RANGE", "ARROW", "SINGLE_IP", "IP_RANGE", 
            "NS", "MAIN_KW", "HOSTS_KW", "TASKS_KW", "VARS_KW", "LOCAL_KW", 
            "SSH_KW", "SSHPASS_KW" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "COMMENT", "WHITESPACE", 
                  "NEWLINE", "ESC", "UNICODE", "HEX", "SAFECODEPOINT", "INT", 
                  "EXP", "STRING", "NUMBER", "DIGIT", "HEX_CHAR", "NUMBER_RANGE", 
                  "ARROW", "SINGLE_IP", "IP_RANGE", "NS", "MAIN_KW", "HOSTS_KW", 
                  "TASKS_KW", "VARS_KW", "LOCAL_KW", "SSH_KW", "SSHPASS_KW" ]

    grammarFileName = "aspida.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.8")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


